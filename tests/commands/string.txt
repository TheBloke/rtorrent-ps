# Tests for "string.*"

# string.len
$ rtxmlrpc --repr string.len '' -- ''
0
$ rtxmlrpc --repr string.len '' -- 'foo123bar'
9
$ rtxmlrpc --repr string.len '' -- '♯'
1
$ rtxmlrpc --repr string.len '' --
ERROR … <Fault -503: 'string.len needs a string argument.0!'>
# END

# string.compare
$ rtxmlrpc --repr string.equals '' first 2nd | as_bool
‹false›
$ rtxmlrpc --repr string.equals '' foobar foobar | as_bool
‹true›
$ rtxmlrpc --repr string.equals '' foo bar foo | as_bool
‹true›

$ rtxmlrpc --repr string.startswith '' foobar '' | as_bool
‹true›
$ rtxmlrpc --repr string.startswith '' foobar foo | as_bool
‹true›
$ rtxmlrpc --repr string.startswith '' foobar baz foo 4th | as_bool
‹true›
$ rtxmlrpc --repr string.startswith '' foobar foe | as_bool
‹false›

$ rtxmlrpc --repr string.endswith '' foobar '' | as_bool
‹true›
$ rtxmlrpc --repr string.endswith '' foobar bar | as_bool
‹true›
$ rtxmlrpc --repr string.endswith '' foobar baz bar | as_bool
‹true›
$ rtxmlrpc --repr string.endswith '' foobar baz | as_bool
‹false›

$ rtxmlrpc --repr string.equals ''
ERROR … string.equals takes at least two arguments
$ rtxmlrpc --repr string.equals '' first
ERROR … string.equals takes at least two arguments
$ rtxmlrpc --repr string.equals '' first +2
ERROR … Wrong object type
$ rtxmlrpc --repr string.equals '' +1 2nd
ERROR … string.equals needs a string argument.0
# END

# string.join
$ rtxmlrpc --repr string.join '' ':'
''
$ rtxmlrpc --repr string.join '' '' 1 2 3
'123'
$ rtxmlrpc --repr string.join '' ':' a +2 [3,4
'a:2:34'
$ rtxmlrpc --repr string.join ''
ERROR … string.join needs a string argument.0
$ rtxmlrpc --repr string.join '' +42
ERROR … string.join needs a string argument.0
# END

# string.split
$ rtxmlrpc --repr string.split '' '1·₂·³' '·'
['1', u'\u2082', u'\xb3']
$ rtxmlrpc --repr string.split '' 1..2. .
['1', '', '2', '']
$ rtxmlrpc --repr string.split '' .1 .
['', '1']
$ rtxmlrpc --repr string.split '' abc .
['abc']
$ rtxmlrpc --repr string.split '' '1²₃' ''
['1', u'\xb2', u'\u2083']
$ rtxmlrpc --repr string.split '' '' '.'
['']
$ rtxmlrpc --repr string.split '' '' ''
[]
$ rtxmlrpc --repr string.split '' ''
ERROR … string.split needs a string argument.1
$ rtxmlrpc --repr string.split '' '' +1
ERROR … string.split needs a string argument.1
# END

# string.substr
$ rtxmlrpc --repr string.substr '' -- 'foo123bar'
'foo123bar'
$ rtxmlrpc --repr string.substr '' -- 'foo123bar' 6
'bar'
$ rtxmlrpc --repr string.substr '' -- 'foo123bar' 3 +3
'123'
$ rtxmlrpc --repr string.substr '' -- 'foo123bar' -6 3
'123'
$ rtxmlrpc --repr string.substr '' -- '➀ ♯'
u'\u2780 \u266f'
$ rtxmlrpc --repr string.substr '' -- '' 42
''
$ rtxmlrpc --repr string.substr '' -- '' 42 1 'Life, universe, everything'
'Life, universe, everything'
$ rtxmlrpc --repr string.substr '' -- 'foobar' 5
'r'
$ rtxmlrpc --repr string.substr '' -- 'foobar' 6
''
$ rtxmlrpc --repr string.substr '' -- '➀ ➁ ➂ ➃ ➄ ➅ ➆ ➇ ➈' 2 1
u'\u2781'
$ rtxmlrpc --repr string.substr '' -- '➀ ➁ ➂ ➃ ➄ ➅ ➆ ➇ ➈' 2 +2
u'\u2781 '
$ rtxmlrpc --repr string.substr '' -- '➀ ➁ ➂ ➃ ➄ ➅ ➆ ➇ ➈' -3 2
u'\u2787 '
$ rtxmlrpc --repr string.substr '' -- 'for123bar' 3 bad
ERROR … string.substr(count): junk at end of value: bad
RC=65
$ rtxmlrpc --repr string.substr '' --
ERROR … string.substr needs a string argument
RC=65
# END

# END string.*
